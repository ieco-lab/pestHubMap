knitr::opts_chunk$set(warning = FALSE, message = FALSE, results = 'hide')
library(tidyverse)
library(here) #relative working directory
library(tigris) #to load in county outline
library(sf) #spatial harmonization
library(rgdal) #loading in GDM
#Download from archive: https://cran.r-project.org/web/packages/rgdal/index.html
library(raster) #for the ensemble raster file
library(terra) #so raster and shapefile can be compared
library(exactextractr) #for extracting ensemble values to sub county shapefile
#file path
shp_path <- here("2_Obtain_Hub_Spatial_Data", "2B_Obtain_Spatial_Data", "Raw_Spatial_Data") %>%
str_remove("/3_Clean_Harmonize_Data/3B_Harmonize_Spatial_Data")
#----1km grid----
#UTM zone 17
km_grid_PA17 <- st_read(file.path(shp_path, "PA_USNG", "PA_USNG_UTM17.shp")) %>%
#adjusting crs for easier manipulation
st_as_sf(coords = c("Easting", "Northing"), crs = 27700) %>%
st_transform(4269) %>%
#fixing column names and discrepancies
dplyr::select(-c("OBJECTID", "OBJECTID_2")) %>%
rename(Shape_Leng = "SHAPE_Leng",
Shape_Area = "SHAPE_Area")
#UTM zone 18
km_grid_PA18 <- st_read(file.path(shp_path, "PA_USNG", "PA_USNG_UTM18.shp")) %>%
st_as_sf(coords = c("Easting", "Northing"), crs = 27700) %>%
st_transform(4269)
#combining UTM zones 17 and 18 for full PA 1km grid
km_grid <- rbind(km_grid_PA17, km_grid_PA18)
#----subcounties----
subcounties <- st_read(file.path(shp_path, "tl_2019_42_cousub", "tl_2019_42_cousub.shp"))
#----establishment risk----
establishment <- rast(file.path(shp_path, "slftoh_ensemble_mean.tif"))
#----counties----
counties <- tigris::counties("Pennsylvania", cb = TRUE)
#saving county outlines
st_write(counties, here("Spatial_Data_Harmonized", "county_outline", "county_outline.shp"))
here()
#PART 1: Getting hub data
hub_types <- c("hospitals", "policeStations", "universities")
hubs <- NULL
for (type in hub_types) {
hubs_path <- file.path(here("3_Clean_Hub_Data", "Hub_Data_Clean",
paste0(type, ".csv"))) %>%
str_remove("/3B_Harmonize_Spatial_Data")
if(file.exists(hubs_path)) {
df <- read.csv(hubs_path)
hubs <- rbind(hubs, df)
} else {
print(paste("No file found for type:", type))
}
sf_hubs <- st_as_sf(hubs, coords = c("Longitude", "Latitude"), crs = 4269)
assign("sf_hubs", sf_hubs)
}
for (type in hub_types) {
hubs_path <- file.path(here("3A_Clean_Hub_Data", "Hub_Data_Clean",
paste0(type, ".csv"))) %>%
str_remove("/3B_Harmonize_Spatial_Data")
if(file.exists(hubs_path)) {
df <- read.csv(hubs_path)
hubs <- rbind(hubs, df)
} else {
print(paste("No file found for type:", type))
}
sf_hubs <- st_as_sf(hubs, coords = c("Longitude", "Latitude"), crs = 4269)
assign("sf_hubs", sf_hubs)
}
hub_density <- subcounties
#county points in each grid polygon
hub_density$hub_count <- lengths(st_intersects(subcounties, sf_hubs))
#county points in each grid polygon
hub_density$hub_count <- lengths(st_intersects(subcounties, sf_hubs))
#Removing rows that are not defined
hub_density <- filter(hub_density, NAME != "County subdivisions not defined")
